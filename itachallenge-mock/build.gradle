plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'jacoco'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.itachallenge.mock'
        )
    }
}
jacoco{
    toolVersion = '0.8.11'
    reportsDirectory = layout.buildDirectory.dir('jacocoXml')
}

group = 'ita.challenges'


repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '3.0.6'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.0.6'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.0.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.6'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
            reports {
                xml.required = true
                csv.required = false
                html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
            }
}

// JaCoCo configuration: https://docs.gradle.org/current/userguide/jacoco_plugin.html
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.7
            }
        }
    }
}

sonarqube {
    properties {
        //property "sonar.jacoco.reportPaths", jacoco.reportsDirectory
    }
}
