version: '3.8'

x-custom-metadata:
  version: 1.0.9
  last-updated: 2024-04-25

services:
  consul-server1:
    image: consul:1.15.2
    container_name: consul-server1-dev
    restart: always
    volumes:
      - ./server1.json:/consul/config/server1.json:ro
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.2
    ports:
      - '8500:8500'
      - '8600:8600/tcp'
      - '8600:8600/udp'
    command: 'agent -bootstrap-expect=3'

  consul-server2:
    image: consul:1.15.2
    container_name: consul-server2-dev
    restart: always
    volumes:
      - ./server2.json:/consul/config/server2.json:ro
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.3
    command: "agent -bootstrap-expect=3"

  consul-server3:
    image: consul:1.15.2
    container_name: consul-server3-dev
    restart: always
    volumes:
      - ./server3.json:/consul/config/server3.json:ro
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.4
    command: "agent -bootstrap-expect=3"

  itachallenge-mongodb:
    container_name: mongodb-itachallenge-dev
    image: mongo:5.0.9
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: '${MONGODB_CHALLENGE_USERNAME}'
      MONGO_INITDB_ROOT_PASSWORD: '${MONGODB_CHALLENGE_PASSWORD}'
      MONGO_INITDB_DATABASE: '${MONGODB_CHALLENGE_DATABASE}'
    volumes:
      - itachallenge_mongodb_data-dev:/var/lib/mongodb
      #- ${MONGODB_CHALLENGE_DATABASE_SCRIPTS_DIR}:/docker-entrypoint-initdb.d
      - ${MONGODB_CHALLENGE_DATABASE_TEST_SCRIPTS_DIR}:/tmp/data/
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.5

  itachallenge-challenge:
    image: '${REGISTRY_NAME}:itachallenge-challenge-${MICROSERVICE_TAG}'
    container_name: 'itachallenge-${MICROSERVICE_TAG}-dev'
    restart: always
    depends_on:
      -  itachallenge-mongodb
    environment:
      - 'spring.data.mongodb.uri=mongodb://${MONGODB_CHALLENGE_USERNAME}:${MONGODB_CHALLENGE_PASSWORD}@172.18.0.5:${MONGODB_CONTAINER_PORT}/${MONGODB_CHALLENGE_DATABASE}?authSource=admin'
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.6


  itachallenge-nginx:
    container_name: nginx-itachallenge
    image: '${REGISTRY_NAME}:nginx-itachallenge-${NGINX_FRONTEND_TAG}'
    restart: always
    ports:
      - "80:80"
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.7

  apisix-gateway:
    container_name: apisix-gateway-dev
    image: apache/apisix:3.7.0-redhat
    restart: always
    volumes:
      - ./apisix_conf/apisix_standalone_dev.yaml:/usr/local/apisix/conf/apisix.yaml:ro
    environment:
      APISIX_STAND_ALONE: true
    ports:
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.8

  itachallenge-mock:
    image: '${REGISTRY_NAME}:itachallenge-mock-${itachallenge-mock_TAG}'
    container_name: 'itachallenge-mock-${itachallenge-mock_TAG}-dev'
    restart: always
    networks:
      apisix-dev:
        ipv4_address: 172.18.0.9

volumes:
  itachallenge_mongodb_data-dev:

networks:
    apisix-dev:
      driver: bridge
      ipam:
        driver: default
        config:
          - subnet: 172.18.0.0/24

